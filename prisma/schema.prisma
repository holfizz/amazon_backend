// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_ap")
  updateAt  DateTime @updatedAt @map("updated_up")

  email    String @unique
  password String

  name       String   @unique
  avatarPath String   @default("./upload/default-avatar.png") @map("avatar_path")
  phone      String   @default("")
  orders     Order[]
  reviews    Review[]
}

model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_ap")
  updateAt  DateTime @updatedAt @map("updated_up")

  name        String
  slug        String
  description String
  price       Int
  images      String[]

  orderItems OrderItem[]
  reviews    Review[]
  Category   Category?   @relation(fields: [categoryId], references: [id])
  categoryId Int?
}

model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_ap")
  updateAt  DateTime @updatedAt @map("updated_up")

  name    String    @unique
  Product Product[]
}

model Review {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_ap")
  updateAt  DateTime @updatedAt @map("updated_up")

  rating Int
  text   String

  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")

  product   Product @relation(fields: [productId], references: [id])
  productId Int     @map("product_id")
}

model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_ap")
  updateAt  DateTime @updatedAt @map("updated_up")

  status EnumOrderStatus @default(PENDING)
  items  OrderItem[]

  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_ap")
  updateAt  DateTime @updatedAt @map("updated_up")

  quantity Int
  price    Int

  Order     Order?   @relation(fields: [orderId], references: [id])
  orderId   Int?     @map("order_id")
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
}

enum EnumOrderStatus {
  PENDING
  PAYED
  SHIPPED
  DELIVERED
}
